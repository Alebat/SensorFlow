package eu.fbk.mpba.sensorsflows.debugapp.util;
// Generated by the protocol buffer compiler.  DO NOT EDIT!


public final class SkiloProtobuffer {
  private SkiloProtobuffer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SensorDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SensorData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     */
    int getId();

    /**
     * <code>required int32 sensor_id_fk = 2;</code>
     */
    boolean hasSensorIdFk();
    /**
     * <code>required int32 sensor_id_fk = 2;</code>
     */
    int getSensorIdFk();

    /**
     * <code>repeated float value = 3 [packed = true];</code>
     */
    java.util.List<java.lang.Float> getValueList();
    /**
     * <code>repeated float value = 3 [packed = true];</code>
     */
    int getValueCount();
    /**
     * <code>repeated float value = 3 [packed = true];</code>
     */
    float getValue(int index);

    /**
     * <code>repeated string text = 4;</code>
     */
    com.google.protobuf.ProtocolStringList
        getTextList();
    /**
     * <code>repeated string text = 4;</code>
     */
    int getTextCount();
    /**
     * <code>repeated string text = 4;</code>
     */
    java.lang.String getText(int index);
    /**
     * <code>repeated string text = 4;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes(int index);

    /**
     * <code>required double timestamp = 5;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>required double timestamp = 5;</code>
     */
    double getTimestamp();
  }
  /**
   * Protobuf type {@code SensorData}
   */
  public static final class SensorData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SensorData)
      SensorDataOrBuilder {
    // Use SensorData.newBuilder() to construct.
    private SensorData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SensorData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SensorData defaultInstance;
    public static SensorData getDefaultInstance() {
      return defaultInstance;
    }

    public SensorData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SensorData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sensorIdFk_ = input.readInt32();
              break;
            }
            case 29: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                value_ = new java.util.ArrayList<>();
                mutable_bitField0_ |= 0x00000004;
              }
              value_.add(input.readFloat());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                value_ = new java.util.ArrayList<>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                value_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                text_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              text_.add(bs);
              break;
            }
            case 41: {
              bitField0_ |= 0x00000004;
              timestamp_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          text_ = text_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SkiloProtobuffer.internal_static_SensorData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SkiloProtobuffer.SensorData.class, SkiloProtobuffer.SensorData.Builder.class);
    }

    public static com.google.protobuf.Parser<SensorData> PARSER =
        new com.google.protobuf.AbstractParser<SensorData>() {
      public SensorData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SensorData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SensorData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
      private int id_;
    /**
     * <code>required int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

      private int sensorIdFk_;
    /**
     * <code>required int32 sensor_id_fk = 2;</code>
     */
    public boolean hasSensorIdFk() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 sensor_id_fk = 2;</code>
     */
    public int getSensorIdFk() {
      return sensorIdFk_;
    }

      private java.util.List<java.lang.Float> value_;
    /**
     * <code>repeated float value = 3 [packed = true];</code>
     */
    public java.util.List<java.lang.Float>
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated float value = 3 [packed = true];</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated float value = 3 [packed = true];</code>
     */
    public float getValue(int index) {
      return value_.get(index);
    }
    private int valueMemorizedSerializedSize = -1;

      private com.google.protobuf.LazyStringList text_;
    /**
     * <code>repeated string text = 4;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getTextList() {
      return text_;
    }
    /**
     * <code>repeated string text = 4;</code>
     */
    public int getTextCount() {
      return text_.size();
    }
    /**
     * <code>repeated string text = 4;</code>
     */
    public java.lang.String getText(int index) {
      return text_.get(index);
    }
    /**
     * <code>repeated string text = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes(int index) {
      return text_.getByteString(index);
    }

      private double timestamp_;
    /**
     * <code>required double timestamp = 5;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double timestamp = 5;</code>
     */
    public double getTimestamp() {
      return timestamp_;
    }

    private void initFields() {
      id_ = 0;
      sensorIdFk_ = 0;
      value_ = java.util.Collections.emptyList();
      text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      timestamp_ = 0D;
    }
    private byte memorizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memorizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memorizedIsInitialized = 0;
        return false;
      }
      if (!hasSensorIdFk()) {
        memorizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestamp()) {
        memorizedIsInitialized = 0;
        return false;
      }
      memorizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, sensorIdFk_);
      }
      if (getValueList().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(valueMemorizedSerializedSize);
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeFloatNoTag(value_.get(i));
      }
      for (int i = 0; i < text_.size(); i++) {
        output.writeBytes(4, text_.getByteString(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(5, timestamp_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memorizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memorizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sensorIdFk_);
      }
      {
        int dataSize;
        dataSize = 4 * getValueList().size();
        size += dataSize;
        if (!getValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valueMemorizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < text_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(text_.getByteString(i));
        }
        size += dataSize;
        size += getTextList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, timestamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memorizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SkiloProtobuffer.SensorData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SkiloProtobuffer.SensorData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SkiloProtobuffer.SensorData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SkiloProtobuffer.SensorData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SkiloProtobuffer.SensorData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SkiloProtobuffer.SensorData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SkiloProtobuffer.SensorData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SkiloProtobuffer.SensorData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SkiloProtobuffer.SensorData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SkiloProtobuffer.SensorData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SkiloProtobuffer.SensorData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        return new Builder(parent);
    }
    /**
     * Protobuf type {@code SensorData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        SkiloProtobuffer.SensorDataOrBuilder {
      public static com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SkiloProtobuffer.internal_static_SensorData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SkiloProtobuffer.internal_static_SensorData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SkiloProtobuffer.SensorData.class, SkiloProtobuffer.SensorData.Builder.class);
      }

      // Construct using A.SensorData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sensorIdFk_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        timestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        super.clone();
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SkiloProtobuffer.internal_static_SensorData_descriptor;
      }

      public SkiloProtobuffer.SensorData getDefaultInstanceForType() {
        return SkiloProtobuffer.SensorData.getDefaultInstance();
      }

      public SkiloProtobuffer.SensorData build() {
        SkiloProtobuffer.SensorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SkiloProtobuffer.SensorData buildPartial() {
        SkiloProtobuffer.SensorData result = new SkiloProtobuffer.SensorData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sensorIdFk_ = sensorIdFk_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.value_ = value_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          text_ = text_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.text_ = text_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timestamp_ = timestamp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SkiloProtobuffer.SensorData) {
          return mergeFrom((SkiloProtobuffer.SensorData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SkiloProtobuffer.SensorData other) {
        if (other == SkiloProtobuffer.SensorData.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasSensorIdFk()) {
          setSensorIdFk(other.getSensorIdFk());
        }
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        if (!other.text_.isEmpty()) {
          if (text_.isEmpty()) {
            text_ = other.text_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTextIsMutable();
            text_.addAll(other.text_);
          }
          onChanged();
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
          return hasSensorIdFk() && hasTimestamp();
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SkiloProtobuffer.SensorData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SkiloProtobuffer.SensorData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private int sensorIdFk_ ;
      /**
       * <code>required int32 sensor_id_fk = 2;</code>
       */
      public boolean hasSensorIdFk() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 sensor_id_fk = 2;</code>
       */
      public int getSensorIdFk() {
        return sensorIdFk_;
      }
      /**
       * <code>required int32 sensor_id_fk = 2;</code>
       */
      public Builder setSensorIdFk(int value) {
        bitField0_ |= 0x00000002;
        sensorIdFk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 sensor_id_fk = 2;</code>
       */
      public Builder clearSensorIdFk() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sensorIdFk_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> value_ = java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          value_ = new java.util.ArrayList<>(value_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated float value = 3 [packed = true];</code>
       */
      public java.util.List<java.lang.Float>
          getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      /**
       * <code>repeated float value = 3 [packed = true];</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated float value = 3 [packed = true];</code>
       */
      public float getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated float value = 3 [packed = true];</code>
       */
      public Builder setValue(
          int index, float value) {
        ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float value = 3 [packed = true];</code>
       */
      public Builder addValue(float value) {
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float value = 3 [packed = true];</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float value = 3 [packed = true];</code>
       */
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTextIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          text_ = new com.google.protobuf.LazyStringArrayList(text_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string text = 4;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getTextList() {
        return text_.getUnmodifiableView();
      }
      /**
       * <code>repeated string text = 4;</code>
       */
      public int getTextCount() {
        return text_.size();
      }
      /**
       * <code>repeated string text = 4;</code>
       */
      public java.lang.String getText(int index) {
        return text_.get(index);
      }
      /**
       * <code>repeated string text = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes(int index) {
        return text_.getByteString(index);
      }
      /**
       * <code>repeated string text = 4;</code>
       */
      public Builder setText(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTextIsMutable();
        text_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string text = 4;</code>
       */
      public Builder addText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTextIsMutable();
        text_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string text = 4;</code>
       */
      public Builder addAllText(
          java.lang.Iterable<java.lang.String> values) {
        ensureTextIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, text_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string text = 4;</code>
       */
      public Builder clearText() {
        text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string text = 4;</code>
       */
      public Builder addTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTextIsMutable();
        text_.add(value);
        onChanged();
        return this;
      }

      private double timestamp_ ;
      /**
       * <code>required double timestamp = 5;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required double timestamp = 5;</code>
       */
      public double getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required double timestamp = 5;</code>
       */
      public Builder setTimestamp(double value) {
        bitField0_ |= 0x00000010;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timestamp = 5;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        timestamp_ = 0D;
        onChanged();
        return this;
      }

    }

    static {
      defaultInstance = new SensorData(true);
      defaultInstance.initFields();
    }

  }

  public interface SensorInfoOrBuilder extends
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 sensor_id = 1;</code>
     */
    boolean hasSensorId();
    /**
     * <code>required int32 sensor_id = 1;</code>
     */
    int getSensorId();

    /**
     * <code>required string desc = 2;</code>
     */
    boolean hasDesc();
    /**
     * <code>required string desc = 2;</code>
     */
    java.lang.String getDesc();
    /**
     * <code>required string desc = 2;</code>
     */
    com.google.protobuf.ByteString
        getDescBytes();

    /**
     * <code>required .SensorInfo.TYPESENSOR type = 3;</code>
     */
    boolean hasType();
    /**
     * <code>required .SensorInfo.TYPESENSOR type = 3;</code>
     */
    SkiloProtobuffer.SensorInfo.TYPESENSOR getType();
  }
  /**
   * Protobuf type {@code SensorInfo}
   */
  public static final class SensorInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SensorInfo)
      SensorInfoOrBuilder {
    // Use SensorInfo.newBuilder() to construct.
    private SensorInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SensorInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SensorInfo defaultInstance;
    public static SensorInfo getDefaultInstance() {
      return defaultInstance;
    }

    public SensorInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SensorInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sensorId_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              desc_ = bs;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              SkiloProtobuffer.SensorInfo.TYPESENSOR value = SkiloProtobuffer.SensorInfo.TYPESENSOR.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SkiloProtobuffer.internal_static_SensorInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SkiloProtobuffer.internal_static_SensorInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SkiloProtobuffer.SensorInfo.class, SkiloProtobuffer.SensorInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<SensorInfo> PARSER =
        new com.google.protobuf.AbstractParser<SensorInfo>() {
      public SensorInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SensorInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SensorInfo> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code SensorInfo.TYPESENSOR}
     */
    public enum TYPESENSOR
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>OTHER = 0;</code>
       */
      OTHER(0, 0),
      /**
       * <code>ACC = 1;</code>
       */
      ACC(1, 1),
      /**
       * <code>GYRO = 2;</code>
       */
      GYRO(2, 2),
      /**
       * <code>MAGNE = 3;</code>
       */
      MAGNE(3, 3),
      /**
       * <code>BVP = 4;</code>
       */
      BVP(4, 4),
      /**
       * <code>GPS = 5;</code>
       */
      GPS(5, 5),
      /**
       * <code>BPM = 6;</code>
       */
      BPM(6, 6),
      /**
       * <code>GSR = 7;</code>
       */
      GSR(7, 7),
      /**
       * <code>BATTERY = 8;</code>
       */
      BATTERY(8, 8),
      /**
       * <code>TEMP = 9;</code>
       */
      TEMP(9, 9),
      /**
       * <code>LUX = 10;</code>
       */
      LUX(10, 10),
      /**
       * <code>IBI = 11;</code>
       */
      IBI(11, 11),
      /**
       * <code>WIFI = 12;</code>
       */
      WIFI(12, 12),
      /**
       * <code>GSM = 13;</code>
       */
      GSM(13, 13),
      /**
       * <code>MARKER = 14;</code>
       */
      MARKER(14, 14),
      ;

      /**
       * <code>OTHER = 0;</code>
       */
      public static final int OTHER_VALUE = 0;
      /**
       * <code>ACC = 1;</code>
       */
      public static final int ACC_VALUE = 1;
      /**
       * <code>GYRO = 2;</code>
       */
      public static final int GYRO_VALUE = 2;
      /**
       * <code>MAGNE = 3;</code>
       */
      public static final int MAGNE_VALUE = 3;
      /**
       * <code>BVP = 4;</code>
       */
      public static final int BVP_VALUE = 4;
      /**
       * <code>GPS = 5;</code>
       */
      public static final int GPS_VALUE = 5;
      /**
       * <code>BPM = 6;</code>
       */
      public static final int BPM_VALUE = 6;
      /**
       * <code>GSR = 7;</code>
       */
      public static final int GSR_VALUE = 7;
      /**
       * <code>BATTERY = 8;</code>
       */
      public static final int BATTERY_VALUE = 8;
      /**
       * <code>TEMP = 9;</code>
       */
      public static final int TEMP_VALUE = 9;
      /**
       * <code>LUX = 10;</code>
       */
      public static final int LUX_VALUE = 10;
      /**
       * <code>IBI = 11;</code>
       */
      public static final int IBI_VALUE = 11;
      /**
       * <code>WIFI = 12;</code>
       */
      public static final int WIFI_VALUE = 12;
      /**
       * <code>GSM = 13;</code>
       */
      public static final int GSM_VALUE = 13;
      /**
       * <code>MARKER = 14;</code>
       */
      public static final int MARKER_VALUE = 14;


      public final int getNumber() { return value; }

      public static TYPESENSOR valueOf(int value) {
        switch (value) {
          case 0: return OTHER;
          case 1: return ACC;
          case 2: return GYRO;
          case 3: return MAGNE;
          case 4: return BVP;
          case 5: return GPS;
          case 6: return BPM;
          case 7: return GSR;
          case 8: return BATTERY;
          case 9: return TEMP;
          case 10: return LUX;
          case 11: return IBI;
          case 12: return WIFI;
          case 13: return GSM;
          case 14: return MARKER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TYPESENSOR>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<TYPESENSOR>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TYPESENSOR>() {
              public TYPESENSOR findValueByNumber(int number) {
                return TYPESENSOR.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return SkiloProtobuffer.SensorInfo.getDescriptor().getEnumTypes().get(0);
      }

      private static final TYPESENSOR[] VALUES = values();

      public static TYPESENSOR valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private TYPESENSOR(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:SensorInfo.TYPESENSOR)
    }

    private int bitField0_;
    public static final int SENSOR_ID_FIELD_NUMBER = 1;
    private int sensorId_;
    /**
     * <code>required int32 sensor_id = 1;</code>
     */
    public boolean hasSensorId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 sensor_id = 1;</code>
     */
    public int getSensorId() {
      return sensorId_;
    }

    public static final int DESC_FIELD_NUMBER = 2;
    private java.lang.Object desc_;
    /**
     * <code>required string desc = 2;</code>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string desc = 2;</code>
     */
    public java.lang.String getDesc() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          desc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string desc = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private SkiloProtobuffer.SensorInfo.TYPESENSOR type_;
    /**
     * <code>required .SensorInfo.TYPESENSOR type = 3;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .SensorInfo.TYPESENSOR type = 3;</code>
     */
    public SkiloProtobuffer.SensorInfo.TYPESENSOR getType() {
      return type_;
    }

    private void initFields() {
      sensorId_ = 0;
      desc_ = "";
      type_ = SkiloProtobuffer.SensorInfo.TYPESENSOR.OTHER;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSensorId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDesc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, sensorId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDescBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, sensorId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDescBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SkiloProtobuffer.SensorInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SkiloProtobuffer.SensorInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SkiloProtobuffer.SensorInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SkiloProtobuffer.SensorInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SkiloProtobuffer.SensorInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SkiloProtobuffer.SensorInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SkiloProtobuffer.SensorInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SkiloProtobuffer.SensorInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SkiloProtobuffer.SensorInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SkiloProtobuffer.SensorInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SkiloProtobuffer.SensorInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        return new Builder(parent);
    }
    /**
     * Protobuf type {@code SensorInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SensorInfo)
        SkiloProtobuffer.SensorInfoOrBuilder {
      public static com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SkiloProtobuffer.internal_static_SensorInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SkiloProtobuffer.internal_static_SensorInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SkiloProtobuffer.SensorInfo.class, SkiloProtobuffer.SensorInfo.Builder.class);
      }

      // Construct using A.SensorInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sensorId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        desc_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = SkiloProtobuffer.SensorInfo.TYPESENSOR.OTHER;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {

          super.clone();
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SkiloProtobuffer.internal_static_SensorInfo_descriptor;
      }

      public SkiloProtobuffer.SensorInfo getDefaultInstanceForType() {
        return SkiloProtobuffer.SensorInfo.getDefaultInstance();
      }

      public SkiloProtobuffer.SensorInfo build() {
        SkiloProtobuffer.SensorInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SkiloProtobuffer.SensorInfo buildPartial() {
        SkiloProtobuffer.SensorInfo result = new SkiloProtobuffer.SensorInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sensorId_ = sensorId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.desc_ = desc_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SkiloProtobuffer.SensorInfo) {
          return mergeFrom((SkiloProtobuffer.SensorInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SkiloProtobuffer.SensorInfo other) {
        if (other == SkiloProtobuffer.SensorInfo.getDefaultInstance()) return this;
        if (other.hasSensorId()) {
          setSensorId(other.getSensorId());
        }
        if (other.hasDesc()) {
          bitField0_ |= 0x00000002;
          desc_ = other.desc_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSensorId()) {
          
          return false;
        }
        if (!hasDesc()) {
          
          return false;
        }
          return hasType();
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SkiloProtobuffer.SensorInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SkiloProtobuffer.SensorInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int sensorId_ ;
      /**
       * <code>required int32 sensor_id = 1;</code>
       */
      public boolean hasSensorId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 sensor_id = 1;</code>
       */
      public int getSensorId() {
        return sensorId_;
      }
      /**
       * <code>required int32 sensor_id = 1;</code>
       */
      public Builder setSensorId(int value) {
        bitField0_ |= 0x00000001;
        sensorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 sensor_id = 1;</code>
       */
      public Builder clearSensorId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sensorId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object desc_ = "";
      /**
       * <code>required string desc = 2;</code>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string desc = 2;</code>
       */
      public java.lang.String getDesc() {
        java.lang.Object ref = desc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            desc_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string desc = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        java.lang.Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string desc = 2;</code>
       */
      public Builder setDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 2;</code>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00000002);
        desc_ = getDefaultInstance().getDesc();
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 2;</code>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        desc_ = value;
        onChanged();
        return this;
      }

      private SkiloProtobuffer.SensorInfo.TYPESENSOR type_ = SkiloProtobuffer.SensorInfo.TYPESENSOR.OTHER;
      /**
       * <code>required .SensorInfo.TYPESENSOR type = 3;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .SensorInfo.TYPESENSOR type = 3;</code>
       */
      public SkiloProtobuffer.SensorInfo.TYPESENSOR getType() {
        return type_;
      }
      /**
       * <code>required .SensorInfo.TYPESENSOR type = 3;</code>
       */
      public Builder setType(SkiloProtobuffer.SensorInfo.TYPESENSOR value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .SensorInfo.TYPESENSOR type = 3;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = SkiloProtobuffer.SensorInfo.TYPESENSOR.OTHER;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SensorInfo)
    }

    static {
      defaultInstance = new SensorInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:SensorInfo)
  }

  public interface TrackSplitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TrackSplit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string phone_id = 1;</code>
     */
    boolean hasPhoneId();
    /**
     * <code>required string phone_id = 1;</code>
     */
    java.lang.String getPhoneId();
    /**
     * <code>required string phone_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getPhoneIdBytes();

    /**
     * <code>required int32 track_id = 2;</code>
     */
    boolean hasTrackId();
    /**
     * <code>required int32 track_id = 2;</code>
     */
    int getTrackId();

    /**
     * <code>required int32 sequence_number = 3;</code>
     */
    boolean hasSequenceNumber();
    /**
     * <code>required int32 sequence_number = 3;</code>
     */
    int getSequenceNumber();

    /**
     * <code>required bool is_last = 8;</code>
     */
    boolean hasIsLast();
    /**
     * <code>required bool is_last = 8;</code>
     */
    boolean getIsLast();

    /**
     * <code>required double ts_start = 4;</code>
     */
    boolean hasTsStart();
    /**
     * <code>required double ts_start = 4;</code>
     */
    double getTsStart();

    /**
     * <code>required double ts_stop = 5;</code>
     */
    boolean hasTsStop();
    /**
     * <code>required double ts_stop = 5;</code>
     */
    double getTsStop();

    /**
     * <code>repeated .SensorData datas = 6;</code>
     */
    java.util.List<SkiloProtobuffer.SensorData>
        getDatasList();
    /**
     * <code>repeated .SensorData datas = 6;</code>
     */
    SkiloProtobuffer.SensorData getDatas(int index);
    /**
     * <code>repeated .SensorData datas = 6;</code>
     */
    int getDatasCount();
    /**
     * <code>repeated .SensorData datas = 6;</code>
     */
    java.util.List<? extends SkiloProtobuffer.SensorDataOrBuilder>
        getDatasOrBuilderList();
    /**
     * <code>repeated .SensorData datas = 6;</code>
     */
    SkiloProtobuffer.SensorDataOrBuilder getDatasOrBuilder(
        int index);

    /**
     * <code>repeated .SensorInfo info = 7;</code>
     */
    java.util.List<SkiloProtobuffer.SensorInfo>
        getInfoList();
    /**
     * <code>repeated .SensorInfo info = 7;</code>
     */
    SkiloProtobuffer.SensorInfo getInfo(int index);
    /**
     * <code>repeated .SensorInfo info = 7;</code>
     */
    int getInfoCount();
    /**
     * <code>repeated .SensorInfo info = 7;</code>
     */
    java.util.List<? extends SkiloProtobuffer.SensorInfoOrBuilder>
        getInfoOrBuilderList();
    /**
     * <code>repeated .SensorInfo info = 7;</code>
     */
    SkiloProtobuffer.SensorInfoOrBuilder getInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code TrackSplit}
   */
  public static final class TrackSplit extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:TrackSplit)
      TrackSplitOrBuilder {
    // Use TrackSplit.newBuilder() to construct.
    private TrackSplit(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TrackSplit(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TrackSplit defaultInstance;
    public static TrackSplit getDefaultInstance() {
      return defaultInstance;
    }

    public TrackSplit getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TrackSplit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              phoneId_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              trackId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              sequenceNumber_ = input.readInt32();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000010;
              tsStart_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000020;
              tsStop_ = input.readDouble();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                datas_ = new java.util.ArrayList<SkiloProtobuffer.SensorData>();
                mutable_bitField0_ |= 0x00000040;
              }
              datas_.add(input.readMessage(SkiloProtobuffer.SensorData.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                info_ = new java.util.ArrayList<SkiloProtobuffer.SensorInfo>();
                mutable_bitField0_ |= 0x00000080;
              }
              info_.add(input.readMessage(SkiloProtobuffer.SensorInfo.PARSER, extensionRegistry));
              break;
            }
            case 64: {
              bitField0_ |= 0x00000008;
              isLast_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          datas_ = java.util.Collections.unmodifiableList(datas_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          info_ = java.util.Collections.unmodifiableList(info_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SkiloProtobuffer.internal_static_TrackSplit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SkiloProtobuffer.internal_static_TrackSplit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SkiloProtobuffer.TrackSplit.class, SkiloProtobuffer.TrackSplit.Builder.class);
    }

    public static com.google.protobuf.Parser<TrackSplit> PARSER =
        new com.google.protobuf.AbstractParser<TrackSplit>() {
      public TrackSplit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrackSplit(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TrackSplit> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PHONE_ID_FIELD_NUMBER = 1;
    private java.lang.Object phoneId_;
    /**
     * <code>required string phone_id = 1;</code>
     */
    public boolean hasPhoneId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string phone_id = 1;</code>
     */
    public java.lang.String getPhoneId() {
      java.lang.Object ref = phoneId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          phoneId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string phone_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPhoneIdBytes() {
      java.lang.Object ref = phoneId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        phoneId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRACK_ID_FIELD_NUMBER = 2;
    private int trackId_;
    /**
     * <code>required int32 track_id = 2;</code>
     */
    public boolean hasTrackId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 track_id = 2;</code>
     */
    public int getTrackId() {
      return trackId_;
    }

    public static final int SEQUENCE_NUMBER_FIELD_NUMBER = 3;
    private int sequenceNumber_;
    /**
     * <code>required int32 sequence_number = 3;</code>
     */
    public boolean hasSequenceNumber() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 sequence_number = 3;</code>
     */
    public int getSequenceNumber() {
      return sequenceNumber_;
    }

    public static final int IS_LAST_FIELD_NUMBER = 8;
    private boolean isLast_;
    /**
     * <code>required bool is_last = 8;</code>
     */
    public boolean hasIsLast() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bool is_last = 8;</code>
     */
    public boolean getIsLast() {
      return isLast_;
    }

    public static final int TS_START_FIELD_NUMBER = 4;
    private double tsStart_;
    /**
     * <code>required double ts_start = 4;</code>
     */
    public boolean hasTsStart() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required double ts_start = 4;</code>
     */
    public double getTsStart() {
      return tsStart_;
    }

    public static final int TS_STOP_FIELD_NUMBER = 5;
    private double tsStop_;
    /**
     * <code>required double ts_stop = 5;</code>
     */
    public boolean hasTsStop() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required double ts_stop = 5;</code>
     */
    public double getTsStop() {
      return tsStop_;
    }

    public static final int DATAS_FIELD_NUMBER = 6;
    private java.util.List<SkiloProtobuffer.SensorData> datas_;
    /**
     * <code>repeated .SensorData datas = 6;</code>
     */
    public java.util.List<SkiloProtobuffer.SensorData> getDatasList() {
      return datas_;
    }
    /**
     * <code>repeated .SensorData datas = 6;</code>
     */
    public java.util.List<? extends SkiloProtobuffer.SensorDataOrBuilder>
        getDatasOrBuilderList() {
      return datas_;
    }
    /**
     * <code>repeated .SensorData datas = 6;</code>
     */
    public int getDatasCount() {
      return datas_.size();
    }
    /**
     * <code>repeated .SensorData datas = 6;</code>
     */
    public SkiloProtobuffer.SensorData getDatas(int index) {
      return datas_.get(index);
    }
    /**
     * <code>repeated .SensorData datas = 6;</code>
     */
    public SkiloProtobuffer.SensorDataOrBuilder getDatasOrBuilder(
        int index) {
      return datas_.get(index);
    }

    public static final int INFO_FIELD_NUMBER = 7;
    private java.util.List<SkiloProtobuffer.SensorInfo> info_;
    /**
     * <code>repeated .SensorInfo info = 7;</code>
     */
    public java.util.List<SkiloProtobuffer.SensorInfo> getInfoList() {
      return info_;
    }
    /**
     * <code>repeated .SensorInfo info = 7;</code>
     */
    public java.util.List<? extends SkiloProtobuffer.SensorInfoOrBuilder>
        getInfoOrBuilderList() {
      return info_;
    }
    /**
     * <code>repeated .SensorInfo info = 7;</code>
     */
    public int getInfoCount() {
      return info_.size();
    }
    /**
     * <code>repeated .SensorInfo info = 7;</code>
     */
    public SkiloProtobuffer.SensorInfo getInfo(int index) {
      return info_.get(index);
    }
    /**
     * <code>repeated .SensorInfo info = 7;</code>
     */
    public SkiloProtobuffer.SensorInfoOrBuilder getInfoOrBuilder(
        int index) {
      return info_.get(index);
    }

    private void initFields() {
      phoneId_ = "";
      trackId_ = 0;
      sequenceNumber_ = 0;
      isLast_ = false;
      tsStart_ = 0D;
      tsStop_ = 0D;
      datas_ = java.util.Collections.emptyList();
      info_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPhoneId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTrackId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSequenceNumber()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsLast()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTsStart()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTsStop()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDatasCount(); i++) {
        if (!getDatas(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getInfoCount(); i++) {
        if (!getInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPhoneIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, trackId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, sequenceNumber_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(4, tsStart_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(5, tsStop_);
      }
      for (int i = 0; i < datas_.size(); i++) {
        output.writeMessage(6, datas_.get(i));
      }
      for (int i = 0; i < info_.size(); i++) {
        output.writeMessage(7, info_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(8, isLast_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPhoneIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, trackId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, sequenceNumber_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, tsStart_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, tsStop_);
      }
      for (int i = 0; i < datas_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, datas_.get(i));
      }
      for (int i = 0; i < info_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, info_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isLast_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SkiloProtobuffer.TrackSplit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SkiloProtobuffer.TrackSplit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SkiloProtobuffer.TrackSplit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SkiloProtobuffer.TrackSplit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SkiloProtobuffer.TrackSplit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SkiloProtobuffer.TrackSplit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SkiloProtobuffer.TrackSplit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SkiloProtobuffer.TrackSplit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SkiloProtobuffer.TrackSplit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SkiloProtobuffer.TrackSplit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SkiloProtobuffer.TrackSplit prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        return new Builder(parent);
    }
    /**
     * Protobuf type {@code TrackSplit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TrackSplit)
        SkiloProtobuffer.TrackSplitOrBuilder {
      public static com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SkiloProtobuffer.internal_static_TrackSplit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SkiloProtobuffer.internal_static_TrackSplit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SkiloProtobuffer.TrackSplit.class, SkiloProtobuffer.TrackSplit.Builder.class);
      }

      // Construct using A.TrackSplit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDatasFieldBuilder();
          getInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        phoneId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        trackId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        sequenceNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        isLast_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        tsStart_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        tsStop_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (datasBuilder_ == null) {
          datas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          datasBuilder_.clear();
        }
        if (infoBuilder_ == null) {
          info_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          infoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
          super.clone();
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SkiloProtobuffer.internal_static_TrackSplit_descriptor;
      }

      public SkiloProtobuffer.TrackSplit getDefaultInstanceForType() {
        return SkiloProtobuffer.TrackSplit.getDefaultInstance();
      }

      public SkiloProtobuffer.TrackSplit build() {
        SkiloProtobuffer.TrackSplit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SkiloProtobuffer.TrackSplit buildPartial() {
        SkiloProtobuffer.TrackSplit result = new SkiloProtobuffer.TrackSplit(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.phoneId_ = phoneId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.trackId_ = trackId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sequenceNumber_ = sequenceNumber_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isLast_ = isLast_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.tsStart_ = tsStart_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tsStop_ = tsStop_;
        if (datasBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            datas_ = java.util.Collections.unmodifiableList(datas_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.datas_ = datas_;
        } else {
          result.datas_ = datasBuilder_.build();
        }
        if (infoBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            info_ = java.util.Collections.unmodifiableList(info_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.info_ = info_;
        } else {
          result.info_ = infoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SkiloProtobuffer.TrackSplit) {
          return mergeFrom((SkiloProtobuffer.TrackSplit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SkiloProtobuffer.TrackSplit other) {
        if (other == SkiloProtobuffer.TrackSplit.getDefaultInstance()) return this;
        if (other.hasPhoneId()) {
          bitField0_ |= 0x00000001;
          phoneId_ = other.phoneId_;
          onChanged();
        }
        if (other.hasTrackId()) {
          setTrackId(other.getTrackId());
        }
        if (other.hasSequenceNumber()) {
          setSequenceNumber(other.getSequenceNumber());
        }
        if (other.hasIsLast()) {
          setIsLast(other.getIsLast());
        }
        if (other.hasTsStart()) {
          setTsStart(other.getTsStart());
        }
        if (other.hasTsStop()) {
          setTsStop(other.getTsStop());
        }
        if (datasBuilder_ == null) {
          if (!other.datas_.isEmpty()) {
            if (datas_.isEmpty()) {
              datas_ = other.datas_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureDatasIsMutable();
              datas_.addAll(other.datas_);
            }
            onChanged();
          }
        } else {
          if (!other.datas_.isEmpty()) {
            if (datasBuilder_.isEmpty()) {
              datasBuilder_.dispose();
              datasBuilder_ = null;
              datas_ = other.datas_;
              bitField0_ = (bitField0_ & ~0x00000040);
              datasBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDatasFieldBuilder() : null;
            } else {
              datasBuilder_.addAllMessages(other.datas_);
            }
          }
        }
        if (infoBuilder_ == null) {
          if (!other.info_.isEmpty()) {
            if (info_.isEmpty()) {
              info_ = other.info_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureInfoIsMutable();
              info_.addAll(other.info_);
            }
            onChanged();
          }
        } else {
          if (!other.info_.isEmpty()) {
            if (infoBuilder_.isEmpty()) {
              infoBuilder_.dispose();
              infoBuilder_ = null;
              info_ = other.info_;
              bitField0_ = (bitField0_ & ~0x00000080);
              infoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getInfoFieldBuilder() : null;
            } else {
              infoBuilder_.addAllMessages(other.info_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPhoneId()) {
          
          return false;
        }
        if (!hasTrackId()) {
          
          return false;
        }
        if (!hasSequenceNumber()) {
          
          return false;
        }
        if (!hasIsLast()) {
          
          return false;
        }
        if (!hasTsStart()) {
          
          return false;
        }
        if (!hasTsStop()) {
          
          return false;
        }
        for (int i = 0; i < getDatasCount(); i++) {
          if (!getDatas(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getInfoCount(); i++) {
          if (!getInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SkiloProtobuffer.TrackSplit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SkiloProtobuffer.TrackSplit) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object phoneId_ = "";
      /**
       * <code>required string phone_id = 1;</code>
       */
      public boolean hasPhoneId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string phone_id = 1;</code>
       */
      public java.lang.String getPhoneId() {
        java.lang.Object ref = phoneId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            phoneId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string phone_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPhoneIdBytes() {
        java.lang.Object ref = phoneId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          phoneId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string phone_id = 1;</code>
       */
      public Builder setPhoneId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        phoneId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string phone_id = 1;</code>
       */
      public Builder clearPhoneId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        phoneId_ = getDefaultInstance().getPhoneId();
        onChanged();
        return this;
      }
      /**
       * <code>required string phone_id = 1;</code>
       */
      public Builder setPhoneIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        phoneId_ = value;
        onChanged();
        return this;
      }

      private int trackId_ ;
      /**
       * <code>required int32 track_id = 2;</code>
       */
      public boolean hasTrackId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 track_id = 2;</code>
       */
      public int getTrackId() {
        return trackId_;
      }
      /**
       * <code>required int32 track_id = 2;</code>
       */
      public Builder setTrackId(int value) {
        bitField0_ |= 0x00000002;
        trackId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 track_id = 2;</code>
       */
      public Builder clearTrackId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        trackId_ = 0;
        onChanged();
        return this;
      }

      private int sequenceNumber_ ;
      /**
       * <code>required int32 sequence_number = 3;</code>
       */
      public boolean hasSequenceNumber() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 sequence_number = 3;</code>
       */
      public int getSequenceNumber() {
        return sequenceNumber_;
      }
      /**
       * <code>required int32 sequence_number = 3;</code>
       */
      public Builder setSequenceNumber(int value) {
        bitField0_ |= 0x00000004;
        sequenceNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 sequence_number = 3;</code>
       */
      public Builder clearSequenceNumber() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sequenceNumber_ = 0;
        onChanged();
        return this;
      }

      private boolean isLast_ ;
      /**
       * <code>required bool is_last = 8;</code>
       */
      public boolean hasIsLast() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bool is_last = 8;</code>
       */
      public boolean getIsLast() {
        return isLast_;
      }
      /**
       * <code>required bool is_last = 8;</code>
       */
      public Builder setIsLast(boolean value) {
        bitField0_ |= 0x00000008;
        isLast_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool is_last = 8;</code>
       */
      public Builder clearIsLast() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isLast_ = false;
        onChanged();
        return this;
      }

      private double tsStart_ ;
      /**
       * <code>required double ts_start = 4;</code>
       */
      public boolean hasTsStart() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required double ts_start = 4;</code>
       */
      public double getTsStart() {
        return tsStart_;
      }
      /**
       * <code>required double ts_start = 4;</code>
       */
      public Builder setTsStart(double value) {
        bitField0_ |= 0x00000010;
        tsStart_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double ts_start = 4;</code>
       */
      public Builder clearTsStart() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tsStart_ = 0D;
        onChanged();
        return this;
      }

      private double tsStop_ ;
      /**
       * <code>required double ts_stop = 5;</code>
       */
      public boolean hasTsStop() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required double ts_stop = 5;</code>
       */
      public double getTsStop() {
        return tsStop_;
      }
      /**
       * <code>required double ts_stop = 5;</code>
       */
      public Builder setTsStop(double value) {
        bitField0_ |= 0x00000020;
        tsStop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double ts_stop = 5;</code>
       */
      public Builder clearTsStop() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tsStop_ = 0D;
        onChanged();
        return this;
      }

      private java.util.List<SkiloProtobuffer.SensorData> datas_ =
        java.util.Collections.emptyList();
      private void ensureDatasIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          datas_ = new java.util.ArrayList<SkiloProtobuffer.SensorData>(datas_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          SkiloProtobuffer.SensorData, SkiloProtobuffer.SensorData.Builder, SkiloProtobuffer.SensorDataOrBuilder> datasBuilder_;

      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public java.util.List<SkiloProtobuffer.SensorData> getDatasList() {
        if (datasBuilder_ == null) {
          return java.util.Collections.unmodifiableList(datas_);
        } else {
          return datasBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public int getDatasCount() {
        if (datasBuilder_ == null) {
          return datas_.size();
        } else {
          return datasBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public SkiloProtobuffer.SensorData getDatas(int index) {
        if (datasBuilder_ == null) {
          return datas_.get(index);
        } else {
          return datasBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public Builder setDatas(
          int index, SkiloProtobuffer.SensorData value) {
        if (datasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDatasIsMutable();
          datas_.set(index, value);
          onChanged();
        } else {
          datasBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public Builder setDatas(
          int index, SkiloProtobuffer.SensorData.Builder builderForValue) {
        if (datasBuilder_ == null) {
          ensureDatasIsMutable();
          datas_.set(index, builderForValue.build());
          onChanged();
        } else {
          datasBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public Builder addDatas(SkiloProtobuffer.SensorData value) {
        if (datasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDatasIsMutable();
          datas_.add(value);
          onChanged();
        } else {
          datasBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public Builder addDatas(
          int index, SkiloProtobuffer.SensorData value) {
        if (datasBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDatasIsMutable();
          datas_.add(index, value);
          onChanged();
        } else {
          datasBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public Builder addDatas(
          SkiloProtobuffer.SensorData.Builder builderForValue) {
        if (datasBuilder_ == null) {
          ensureDatasIsMutable();
          datas_.add(builderForValue.build());
          onChanged();
        } else {
          datasBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public Builder addDatas(
          int index, SkiloProtobuffer.SensorData.Builder builderForValue) {
        if (datasBuilder_ == null) {
          ensureDatasIsMutable();
          datas_.add(index, builderForValue.build());
          onChanged();
        } else {
          datasBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public Builder addAllDatas(
          java.lang.Iterable<? extends SkiloProtobuffer.SensorData> values) {
        if (datasBuilder_ == null) {
          ensureDatasIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, datas_);
          onChanged();
        } else {
          datasBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public Builder clearDatas() {
        if (datasBuilder_ == null) {
          datas_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          datasBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public Builder removeDatas(int index) {
        if (datasBuilder_ == null) {
          ensureDatasIsMutable();
          datas_.remove(index);
          onChanged();
        } else {
          datasBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public SkiloProtobuffer.SensorData.Builder getDatasBuilder(
          int index) {
        return getDatasFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public SkiloProtobuffer.SensorDataOrBuilder getDatasOrBuilder(
          int index) {
        if (datasBuilder_ == null) {
          return datas_.get(index);  } else {
          return datasBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public java.util.List<? extends SkiloProtobuffer.SensorDataOrBuilder>
           getDatasOrBuilderList() {
        if (datasBuilder_ != null) {
          return datasBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(datas_);
        }
      }
      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public SkiloProtobuffer.SensorData.Builder addDatasBuilder() {
        return getDatasFieldBuilder().addBuilder(
            SkiloProtobuffer.SensorData.getDefaultInstance());
      }
      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public SkiloProtobuffer.SensorData.Builder addDatasBuilder(
          int index) {
        return getDatasFieldBuilder().addBuilder(
            index, SkiloProtobuffer.SensorData.getDefaultInstance());
      }
      /**
       * <code>repeated .SensorData datas = 6;</code>
       */
      public java.util.List<SkiloProtobuffer.SensorData.Builder>
           getDatasBuilderList() {
        return getDatasFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          SkiloProtobuffer.SensorData, SkiloProtobuffer.SensorData.Builder, SkiloProtobuffer.SensorDataOrBuilder>
          getDatasFieldBuilder() {
        if (datasBuilder_ == null) {
          datasBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              SkiloProtobuffer.SensorData, SkiloProtobuffer.SensorData.Builder, SkiloProtobuffer.SensorDataOrBuilder>(
                  datas_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          datas_ = null;
        }
        return datasBuilder_;
      }

      private java.util.List<SkiloProtobuffer.SensorInfo> info_ =
        java.util.Collections.emptyList();
      private void ensureInfoIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          info_ = new java.util.ArrayList<SkiloProtobuffer.SensorInfo>(info_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          SkiloProtobuffer.SensorInfo, SkiloProtobuffer.SensorInfo.Builder, SkiloProtobuffer.SensorInfoOrBuilder> infoBuilder_;

      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public java.util.List<SkiloProtobuffer.SensorInfo> getInfoList() {
        if (infoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(info_);
        } else {
          return infoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public int getInfoCount() {
        if (infoBuilder_ == null) {
          return info_.size();
        } else {
          return infoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public SkiloProtobuffer.SensorInfo getInfo(int index) {
        if (infoBuilder_ == null) {
          return info_.get(index);
        } else {
          return infoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public Builder setInfo(
          int index, SkiloProtobuffer.SensorInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoIsMutable();
          info_.set(index, value);
          onChanged();
        } else {
          infoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public Builder setInfo(
          int index, SkiloProtobuffer.SensorInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.set(index, builderForValue.build());
          onChanged();
        } else {
          infoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public Builder addInfo(SkiloProtobuffer.SensorInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoIsMutable();
          info_.add(value);
          onChanged();
        } else {
          infoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public Builder addInfo(
          int index, SkiloProtobuffer.SensorInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoIsMutable();
          info_.add(index, value);
          onChanged();
        } else {
          infoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public Builder addInfo(
          SkiloProtobuffer.SensorInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.add(builderForValue.build());
          onChanged();
        } else {
          infoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public Builder addInfo(
          int index, SkiloProtobuffer.SensorInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.add(index, builderForValue.build());
          onChanged();
        } else {
          infoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public Builder addAllInfo(
          java.lang.Iterable<? extends SkiloProtobuffer.SensorInfo> values) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, info_);
          onChanged();
        } else {
          infoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public Builder clearInfo() {
        if (infoBuilder_ == null) {
          info_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          infoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public Builder removeInfo(int index) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.remove(index);
          onChanged();
        } else {
          infoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public SkiloProtobuffer.SensorInfo.Builder getInfoBuilder(
          int index) {
        return getInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public SkiloProtobuffer.SensorInfoOrBuilder getInfoOrBuilder(
          int index) {
        if (infoBuilder_ == null) {
          return info_.get(index);  } else {
          return infoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public java.util.List<? extends SkiloProtobuffer.SensorInfoOrBuilder>
           getInfoOrBuilderList() {
        if (infoBuilder_ != null) {
          return infoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(info_);
        }
      }
      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public SkiloProtobuffer.SensorInfo.Builder addInfoBuilder() {
        return getInfoFieldBuilder().addBuilder(
            SkiloProtobuffer.SensorInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public SkiloProtobuffer.SensorInfo.Builder addInfoBuilder(
          int index) {
        return getInfoFieldBuilder().addBuilder(
            index, SkiloProtobuffer.SensorInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .SensorInfo info = 7;</code>
       */
      public java.util.List<SkiloProtobuffer.SensorInfo.Builder>
           getInfoBuilderList() {
        return getInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          SkiloProtobuffer.SensorInfo, SkiloProtobuffer.SensorInfo.Builder, SkiloProtobuffer.SensorInfoOrBuilder>
          getInfoFieldBuilder() {
        if (infoBuilder_ == null) {
          infoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              SkiloProtobuffer.SensorInfo, SkiloProtobuffer.SensorInfo.Builder, SkiloProtobuffer.SensorInfoOrBuilder>(
                  info_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          info_ = null;
        }
        return infoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:TrackSplit)
    }

    static {
      defaultInstance = new TrackSplit(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TrackSplit)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SensorData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SensorData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SensorInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SensorInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrackSplit_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TrackSplit_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\007a.proto\"b\n\nSensorData\022\n\n\002id\030\001 \002(\005\022\024\n\014s" +
      "ensor_id_fk\030\002 \002(\005\022\021\n\005value\030\003 \003(\002B\002\020\001\022\014\n\004" +
      "text\030\004 \003(\t\022\021\n\ttimestamp\030\005 \002(\001\"\367\001\n\nSensor" +
      "Info\022\021\n\tsensor_id\030\001 \002(\005\022\014\n\004desc\030\002 \002(\t\022$\n" +
      "\004type\030\003 \002(\0162\026.SensorInfo.TYPESENSOR\"\241\001\n\n" +
      "TYPESENSOR\022\t\n\005OTHER\020\000\022\007\n\003ACC\020\001\022\010\n\004GYRO\020\002" +
      "\022\t\n\005MAGNE\020\003\022\007\n\003BVP\020\004\022\007\n\003GPS\020\005\022\007\n\003BPM\020\006\022\007" +
      "\n\003GSR\020\007\022\013\n\007BATTERY\020\010\022\010\n\004TEMP\020\t\022\007\n\003LUX\020\n\022" +
      "\007\n\003IBI\020\013\022\010\n\004WIFI\020\014\022\007\n\003GSM\020\r\022\n\n\006MARKER\020\016\"" +
      "\264\001\n\nTrackSplit\022\020\n\010phone_id\030\001 \002(\t\022\020\n\010trac",
      "k_id\030\002 \002(\005\022\027\n\017sequence_number\030\003 \002(\005\022\017\n\007i" +
      "s_last\030\010 \002(\010\022\020\n\010ts_start\030\004 \002(\001\022\017\n\007ts_sto" +
      "p\030\005 \002(\001\022\032\n\005datas\030\006 \003(\0132\013.SensorData\022\031\n\004i" +
      "nfo\030\007 \003(\0132\013.SensorInfo"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_SensorData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SensorData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SensorData_descriptor,
        new java.lang.String[] { "Id", "SensorIdFk", "Value", "Text", "Timestamp", });
    internal_static_SensorInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SensorInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SensorInfo_descriptor,
        new java.lang.String[] { "SensorId", "Desc", "Type", });
    internal_static_TrackSplit_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_TrackSplit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_TrackSplit_descriptor,
        new java.lang.String[] { "PhoneId", "TrackId", "SequenceNumber", "IsLast", "TsStart", "TsStop", "Datas", "Info", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
